<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

return new class extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        $tableNames = config('roles.table_names');
        $columnNames = config('roles.column_names');
        $teams = config('roles.teams');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/roles.php not loaded. Run [php artisan config:clear] and try again.');
        }
        if (empty($columnNames)) {
            throw new \Exception('Error: config/roles.php not loaded. Run [php artisan config:clear] and try again.');
        }

        Schema::create($tableNames['roles'], function (Blueprint $table) {
            $table->bigIncrements('id'); // role id
            $table->string('name');       // For MySQL 8.0 use string('name', 125);
            $table->string('guard_name'); // For MySQL 8.0 use string('guard_name', 125);
            $table->timestamps();

            $table->unique(['name', 'guard_name']);
        });

        Schema::create($tableNames['model_has_roles'], function (Blueprint $table) use ($tableNames, $columnNames) {
            $pivotRole = $columnNames['role_pivot_key'] ?: 'role_id';
            
            $table->unsignedBigInteger($pivotRole);
            $table->string('model_type');
            $table->unsignedBigInteger($columnNames['model_morph_key']);
            
            $table->index([$columnNames['model_morph_key'], 'model_type'], 'model_has_roles_model_id_model_type_index');

            $table->foreign($pivotRole)
                ->references('id') // role id
                ->on($tableNames['roles'])
                ->onDelete('cascade');

            $table->primary([$pivotRole, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_roles_role_model_type_primary');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        $tableNames = config('roles.table_names');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/roles.php not found and defaults could not be merged. Please publish the package configuration before proceeding, or drop the tables manually.');
        }

        Schema::drop($tableNames['model_has_roles']);
        Schema::drop($tableNames['roles']);
    }
};